name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '23'

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    # √âtape 1 : Setup et v√©rification de la cl√© priv√©e
    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -t rsa 146.59.242.125 >> ~/.ssh/known_hosts

    # √âtape 2 : Test de connexion SSH
    - name: Test SSH Connection
      run: |
        echo "üîç Test de connexion SSH avec d√©tails (mode verbeux)..."
        ssh -v -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no thomas@146.59.242.125 "echo '‚úÖ Connexion SSH r√©ussie !'"

    # √âtape 3 : Cloner Git repository sur le VPS
    - name: Clone Git repository on VPS
      run: |
        echo "üì¶ Clonage du d√©p√¥t sur le serveur..."
        ssh -v -i ~/.ssh/id_rsa thomas@146.59.242.125 << 'EOF'
          cd project-node/test-nest
          git pull origin main
          echo "üõ† Arr√™t et suppression des anciens containers..."
          docker-compose down -v || true
          echo "üöÄ Lancement du container avec Docker Compose..."
          docker-compose up -d
          
          # √âtape 4 : V√©rification si la base de donn√©es est pr√™te
          attempts=0
          max_attempts=20  # Limite le nombre de tentatives
          until docker-compose exec -T db sh -c "pg_isready -U postgres"; do
            attempts=$((attempts+1))
            if [ $attempts -ge $max_attempts ]; then
              echo "La base de donn√©es n'est pas pr√™te apr√®s $attempts tentatives, sortie..."
              exit 1
            fi
            echo "En attente que la base de donn√©es soit pr√™te... Tentative $attempts/$max_attempts"
            sleep 5
          done
        EOF

    - name: apply migrations
      run: |
        echo "üì¶ Clonage du d√©p√¥t sur le serveur..."
        ssh -v -i ~/.ssh/id_rsa thomas@146.59.242.125 << 'EOF'
          cd project-node/test-nest
          docker-compose -T exec api npx prisma generate
          docker-compos -T exec api npx prisma migrate dev --name init
        EOF
